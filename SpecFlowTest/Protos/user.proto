syntax = "proto3";

import "google/protobuf/empty.proto";

option csharp_namespace = "ServiceTest";

package user;

message ServiceReply {
  string code = 1;
  string message = 2;
  string id = 3;
}

message UserEmail {
  string email = 1;
}

message UserRole {
  string email = 1;
  string username = 2;
  string role = 3;
}

message UserPassword {
  string email = 1;
  string username = 2;
  string password = 3;
}

message UserEmailResult {
 string email = 1;
 bool existing = 2;
}

message UserLogin {
	string email = 1;
	string username = 2;
	string password = 3;
	string refresh_token = 4;
}

message UserLoginResult {
	string email = 1;
	string value = 2;
	string issueAt = 3;
	int64 expireInHours = 4;
	string refreshToken = 5;
}

message EmailSearch {
	string keywords = 1;
	int64 size = 2;
}

message EmailSearchResult {
	repeated string results = 2;
}

message Profile {
	string surname = 1;
	string givenName = 2;
	string Company = 3;
	string CompanyType = 4;
	string Title = 5;
	string Phone = 6;
	string Fax = 7;
	string City = 8;
	string Address = 9;
	string Post = 10;
	string Supplier = 11;
	string Contact = 12;
}

message UserProfile {
	string email = 1;
	Profile profile = 2;
}

message UserAccount {
 string email = 1;
 string username = 2;
 string role = 3;
 bool confirmed = 4;
 Profile profile = 5;
}

service UserService {
	rpc GetUser (UserEmail) returns (UserEmailResult);
	rpc CreateUser (UserPassword) returns (ServiceReply);
	rpc VerifyUser (UserEmail) returns (ServiceReply);
	rpc GetToken (UserLogin) returns (UserLoginResult);
}

service AccountService {
  rpc GetRole (UserEmail) returns (UserRole);
  rpc GetAccount (UserEmail) returns (UserAccount);
  rpc CreateVerificationCode (UserEmail) returns (ServiceReply);
  rpc UpdateProfile (UserProfile) returns (ServiceReply);
}

message ServiceSetting {
	string key = 1;
	string value = 2;
	string description = 3;
}

message ServiceSettings {
	repeated ServiceSetting settings = 1;
}

service SettingService {
	rpc CreateSetting (ServiceSetting) returns (ServiceReply);
	rpc UpdateSetting (ServiceSetting) returns (ServiceReply);
	rpc DeleteSetting (ServiceSetting) returns (ServiceReply);
	rpc GetSettings (google.protobuf.Empty) returns (ServiceSettings);
}

message SimpleQueueMessage {
	string queue = 1;
	string message = 2;
}

service MessageService {
	rpc SendSimpleMessage (SimpleQueueMessage) returns (ServiceReply);
}